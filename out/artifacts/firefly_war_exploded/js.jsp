<%@ page contentType="text/html;charset=gbk" language="java" pageEncoding="gbk" %>
<html>
<head>
    <title>bankms - js示例</title>
</head>
<body>
<script type="text/javascript">


    alert("js.jsp开始运行");
    function tetttt() {
        document.write("+");
        setTimeout(tetttt, 1000);
    }

    tetttt();
    var array = [5,6,7,8];
    var numbers = array.slice(0,2);//index0-1
    for (var i in numbers){
        alert(numbers[i]);
    }

    var i = new Object;
    alert(typeof (i));
    var i = 1;
    var j = true;
    alert(i === j);

    function test(i) {
        alert("调用时传入的参数个数即实参个数：" + arguments.length);
        alert("形参个数：" + test.length);//函数名
    }

    test();


</script>
<h5>js基础</h5>
复合数据类型：返回引用，<br/>
函数作用域<br/>
js闭包，js作用域链<br/>
<h6>创建对象</h6>
<script>
    var student = new Object;
    student.name = "李篪";
    student.age = "21";//创建对象完毕

    // 键值对 key一定是" "，对象和数组的结合嵌套
    var obj1 = {"name": "lichi", "age": 12};
    // {} -- 一个对象
    // [] -- 一个数组
    alert(obj1.name + "--" + obj1.age);

    //
    var o2={
        run:function (i) {
            alert("cd"+i);
        }
    }
    o2.run(34);

    // json只包含数据，不包含方法

    delete student.age;//删除对象的属性

    //js不需要自己释放内存


    var box = "//中国";
    alert(encodeURI(box));//编码
    alert(encodeURIComponent(box));
    alert(decodeURIComponent(encodeURIComponent(box)));
    // alert(decodeURI(encodeURI(box)));//解码

    eval('var box = 100');//对js代码的解析
    // 用string传，解析成js代码
    alert(box);
</script>
<h6>正则表达式</h6>
<h7>正则表达式用于验证UI的输入</h7>
<script>
    /*正则表达式讲解

    */

    /*以正则对象为主体*/

    //创建正则表达式方式1
    var reg = new RegExp('box','i');//i 忽略大小写
    var string = 'this is a box!';
    alert("字符串\"string\"是否匹配：" + reg.test(string));

    //创建正则表达式方式2
    reg=/box/i;//定义一个模式：字符串是否包含一个忽略大小写的box
    alert("字符串\"string\"是否匹配：" + reg.test(string));

    alert(reg.exec(string));//返回第一个匹配的值


    alert("开始");
    var pattern = /(g)oogle!/;
    string = 'this is a google';
    pattern.test(string);

    alert(RegExp.input);
    alert(RegExp.leftContext);//（字符串的左边）/////
    alert(RegExp.rightContext);
    alert(RegExp.lastMatch);
    alert(RegExp.lastParen);
    alert(RegExp.multiline);

    alert("String对象的正则表达式");

    /*以字符串对象为主体*/
    pattern = /box/ig;//全局搜索
    string = 'this is a Box!this is a box too';
    alert(string.match(pattern));//匹配到2个box
    // 正则.match(字符串 )
    // console.log()
    alert(string.match(pattern).length);//数组长度
    var regExpMatchArray = string.match(pattern);//返回对象（数组）

    alert(string.search(pattern));//返回匹配到的位置（字符串的索引）/////
    string.replace(pattern, 'Tom');
    alert(string);

    alert("练习");
    var reg = /^[a-z]{3}/ig;//含义：a-z中字母三个连续的并以其开头
    reg = /^[a-z]{3}.+\d$/ig;//含义：a-z中字母三个连续的并以其开头，中间0-多个字符，以一个数字结尾
    var string = "azx1";
    alert(reg.test(string)+"66666");
    // .*  无所谓
    // .+  0-多个字符

</script>










有一个，本来想kill her，不了，发meg，认定，nancy
</body>
</html>
